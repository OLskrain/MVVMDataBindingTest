<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android">
    <data>
        <!-- здесь описывается переменная, ссылается на нашу ViewModel -->
        <variable name="viewModel" type="com.olskrain.mvvmtestproject.presentation.viewmodel.UserViewModel" />
        <import type="android.view.View"/>
        <import type="android.text.TextUtils"/>
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">

        <!-- текстовое поле подписывается на обозреваемое поле user у ViewModel
        и отображает конкретное поле объекта данных -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{viewModel.user.firstName}"/>

        <!-- текстовое поле подписывается на обозреваемое поле user у ViewModel
        и отображает конкретное поле объекта данных -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{viewModel.user.lastName}"/>

        <!-- текстовое поле подписывается на обозреваемое поле user у ViewModel
        и отображает конкретное поле объекта данных -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{String.valueOf(viewModel.user.age)}"/>

        <!-- текстовое поле подписывается на обозреваемое поле error у ViewModel
        и выставляет свою видимость в зависимости от значения поля
        в XML можно писать довольно сложный код, но лучше этого избегать -->
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:visibility="@{TextUtils.isEmpty(viewModel.error) ? View.GONE : View.VISIBLE}"
            android:text="@{viewModel.error}"/>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:visibility="@{TextUtils.isEmpty(viewModel.result) ? View.GONE : View.VISIBLE}"
            android:text="@{viewModel.result}"/>

        <!-- клик по кнопке связывается с методом ViewModel -->
        <Button
            android:id="@+id/button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:onClick="@{() -> viewModel.onUserAction()}"
            android:text="Button" />

    </LinearLayout>

</layout>